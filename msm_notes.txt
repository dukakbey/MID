MSM
===========
Ders 1:
	genel:
		- MSM uygulaması comapi kullanıyor:
			- comApi jar'ı üretildikten sonra bu jar'ı kütüphane olarak kullanabilmek için eclips'te "Properties -> Java Build Path -> add Externall Jars " seçilerek ekleniyor.
		- Comapi normalde java 1.8 ile hazırlanıyor fakat mirsad'a 1.7 ile vermemiz gerekiyor. Projeye göre jar üretmemiz gerekiyor.
		- DPU'dan alınan alarmları filtrelemeyi sağlar.
		- Touch Dashboard'da sensör üzerinde yer alan '...'=> Setting Management => Configuration bastığımızda sensör'ün  msm_user_settings.cfg üzerindeki ayarları görebilir ve değiştirebiliriz.
		- localhost:3000/management ile sensöre restart atabiliyoruz.
	- com.aselsan.msm.tcp:
		- DPU'dan gelen tüm ses,alarm,şelale,cit verilerini tcp üzerinden alır.
		- 
		- 
		
	- msm_default_settings.cfg:
		- app.touchAnalyzeURL=http://127.0.0.1:3000/analyze/   => Touch adresi
		- app.caption=MIDAS_335 => Harita üzerinde yazılacak sensör ismi
		- app.dpuWebPageURL=http://127.0.0.1:9980 => dpu_web
		- app.filter.controlActive=false => bölge tanımını kapatıp açmaya yarıyor. Alarmlar her türlü üretiliyor ama MSM bunun comapi'ye iletilmesini bu kontrol sayesinde sağlıyor.
		- app.filter.controlEarthquake=false => deprem için filtreleme yapmaz.
		- app.statusMessageSendPeriodInMilliseconds=5000 => CIT mesajının frekansı
		- app.midasComServerIpPorts=127.0.0.1:9091  => kafka'nın ip ve portu
		- app.dpuPort=19193 => dpu bu porttan waterfall, alarm, ses ve cit mesajı gönderiyor. Bu port değişirse dpu'dan data alamayız. Burdan aldığı bu data'yı kafkaya basıyor.
		- app.location.latitude=39.965714 
		  app.location.longitude=32.765981
		  app.location.altitude=1200  => bu 3'ü sensör'ün enlem ve boylam bilgileri.
		  
		- Touch üzerinde versiyon bilgilerini basabilmek için exe'lerin path'leri veriliyor:
			#app info part
			app.info.msmFullPath=C:\\MIDAS\\MSM\\MSM.exe
			app.info.dbmFullPath=C:\\MIDAS\\DBM\\DBM.exe
			app.info.armFullPath=C:\\MIDAS\\ARS\\ARS.exe
			app.info.dpuFullPath=C:\\MIDAS\\DPU\\DPU.exe
			
		- Config'lerin versiyon bilgileri alınıyor ama Touch üzerinde basılmamış henüz:
			#app version part
			app.msmApplicationFilePath=C:\\MIDAS\\config\\application\\msm_application_settings.diff
			app.dbmApplicationFilePath=C:\\MIDAS\\config\\application\\dbm_application_settings.diff
			app.armApplicationFilePath=C:\\MIDAS\\config\\application\\ars_application_settings.diff
			app.dpuConfigVersionFilePath=C:\\MIDAS\\config\\application\\dpu_application_main.diff
			
		- 200 ms'de bir waterfall mesajı geliyor bu True olursa msm akan mesajına waterfall da eklenir ve şişme olur:
			app.waterfall.showMessageLog=false
========================		
Ders 2:
	Genel
		- Touch açıldığında CUCommunicator aracılığı ile bir request geliyor, msmCommunicator'un messageListener'ında tanımlı olan descriptionRequestMessageReceived fonksiyonu bunu yakalayarak "Descripton Response Message" response dönüyor.	
		
	- MSMAppStarter:
	
	- MSMManager:
		- MsmCommunicator: 
			- comapi kütüphanesi kullanılarak kütüphanede yer alan MsmCommunicator sınıfından nesne yaratılarak Kafka ile iletişim kurulur.
			- input olarak 2 parametre alır:
				1) kafka "ip:port" bilgisi (localhost:9091)
				2) sensör id
			- MU,CU Communicator'da yer alan şelale verisi,alarm,ses verisi al fonksiyonları burda yer almaz. Alarm basan yer burası.	
			- msmCommunicator'a iletişim için message listener eklenir:
				msmCommunicator.addMessageListener(new MSMMessageListener() 
			- Touch açıldığında CUCommunicator aracılığı ile bir request geliyor, msmCommunicator'un messageListener'ı bunu yakalayarak "Descripton Response Message" response dönüyor.
			- response'lar response_to_sensor topic'ine yazılır.
			
		- DPUTcpCommunicator : DPU ile tcp iletişimi kurarak alarm, şelale,cit verilerini almak için için kullanılır.
		- mapDayFlag:
			- bölge tanımı girildiğinde repetitive olan modunda (örn: her hafta salı ve çarşamba kazı aktivitesi açık olsun) arayüzdeki günleri map'lemek için kullanılır.
		
		- EXE'lerin versiyon bilgilerini basar:
			msmAppVersion = EXEFileInfo.getVersionInfo(ConfigurationManager.getInstance().MSM_APP_INFO_FULLPATH);
			dbmAppVersion = EXEFileInfo.getVersionInfo(ConfigurationManager.getInstance().DBM_APP_INFO_FULLPATH);
			armAppVersion = EXEFileInfo.getVersionInfo(ConfigurationManager.getInstance().ARM_APP_INFO_FULLPATH);
			dpuAppVersion = EXEFileInfo.getVersionInfo(ConfigurationManager.getInstance().DPU_APP_INFO_FULLPATH);
		
		- Genelde MSM'ye komutlar mirsad veya touch üzerinden geliyor.
		- DBM ,ARS'den CİT mesajları MSM'ye geliyor.
		- Touch açıldığı zaman (localhost:3000'e basıldığı zaman) bir "CITRequestMessage" request_to_sensor topic'ine yazılıyor ve MSM'ye (citRequestMessageReceived fonksiyonu) geliyor. Bu sayede DPU,DBM,ARS'den gelen CIT mesajları merge edilip basılıyor, Touch almaya başlıyor. "CITRequestMessage" mesajı 1 kez yollanıyor.
		- ucitMessageReceived: ARS , DBM'den gelen CIT'ler.
		- audioRequestMessageReceived:
			- CUCommunicator'dan geliyor. Kanal üzerinde sağ tıklayıp kanalı dinle dediğimizde gelen request.
			
		- Touch üzerinde max kanal sayısını burdan alıyor : descriptionMessage.setMaxChannelCount(maxChannelSize);	maxChannelSize ise DPU'dan gelir.
		
========================		
Ders 3:
	Genel:
		- Touch üzerinden gelen istek Kafkadan MSM'ye geliyor. MSM'De istek fonksiyonlarına düşüyor.
		- Örnek: Touch arayüzünden play audio dediğimiz zaman CUCommunicator üzerinden Kafkaya ordan da MSM'ye audioRequestMessageReceived'e düşüyor. MSM'Den DPU'ya ise websocket ile iletiliyor:
			- websocketManager.sendMessage(arg0); fonksiyonu dpu'ya iletir.
			- DPU comapi kullanmadığı için sendMessage içinde dpu'nun anlayacağı formata dönüştürülüyor.
			- Bölge tanımları DPU'ya gelmiyor. MSM üzerinde hallediliyor. Bölge tanımlarının MSM'den DPU'ya kaydırılması isteği vardı ama yapılmadı.
			
		- spectrogram kullanılmıyor.
	- MSMManager:
		- CIT Mesajlarının gönderilme periyodu: STATUS_MESSAGE_SEND_PERIOD_IN_MILLISECONDS
		- regionThresholdMessage: şelaledeki kırmızılıkları maviye çevirebilmeyi sağlıyor. Artık kullanılmıyor. Bu yetenek kaldırılmış.
		- commandMessageReceived: sensörleri veya ilgili bilgisayarlardaki yazılımları kapatıp açmayı sağlayan fonksiyon.
		
		18:27'de kaldık
		 
		
========================		
Ders 4:
	